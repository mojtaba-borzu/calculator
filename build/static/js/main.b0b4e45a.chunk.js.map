{"version":3,"sources":["calculator/AddNumber.js","App.js","index.js","tailwind.config.js","postcss.config.js"],"names":["AddNumber","numberOne","numberTwo","addNum","addNumTwo","useState","equal","setEqual","numOne","setNumOne","numTwo","setNumTwo","equalMathOne","setEqualMathOne","toClear","setToClear","inputNumOne","inputNumTwo","remainderNum","addExcess","addExcessTwo","endAdd","className","type","value","onChange","e","target","onClick","split","reverse","length","console","log","i","j","push","Number","pop","join","App","ReactDOM","render","document","getElementById","module","exports","purge","darkMode","theme","extend","variants","plugins","tailwindcss","autoprefixer"],"mappings":"yJAiHeA,MA9Gf,WACE,IAQKC,EACAC,EACAC,EAIDC,EAdJ,EAA0BC,mBAAU,IAApC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBF,qBAAxB,mBAAMG,EAAN,KAAaC,EAAb,KACC,EAAwBJ,qBAAxB,mBAAMK,EAAN,KAAaC,EAAb,KACA,EAAoCN,mBAAS,IAA7C,mBAAMO,EAAN,KAAmBC,EAAnB,KACA,EAA0BR,mBAAS,GAAnC,mBAAMS,EAAN,KAAcC,EAAd,KAEIC,EAAaR,EACbS,EAAaP,EAIdQ,EAAe,GACfC,EAAY,CAAC,GAGfC,EAAa,CAAC,GACdC,EAAO,GAuET,OACE,qBAAKC,UAAU,OAAf,SACE,iCACD,uBAAOC,KAAK,OAAQC,MAAOhB,EAAQiB,SAAU,SAACC,GAAKjB,EAAUiB,EAAEC,OAAOH,UACtE,6BAAKhB,IACL,uBAAOe,KAAK,OAAOC,MAAOd,EAAQe,SAAU,SAACC,GAAKf,EAAUe,EAAEC,OAAOH,UACtE,6BAAKd,IACL,sDAAkBJ,MACL,IAAXQ,EAAc,6DAA4BR,EAA5B,cAA2C,8BAAMM,IAAjD,SAA8E,uDAChG,8BACY,IAAXE,EACI,wBAAQQ,UAAU,cAAcC,KAAK,SAASK,QA7E7B,WAElBZ,EAAcA,EAAYa,MAAM,IAAKC,UACrCb,EAAcA,EAAYY,MAAM,IAAKC,UAavCd,EAAYe,QAAUd,EAAYc,QAX9B9B,EAAUe,EACVd,EAAUe,IAKVhB,EAAUgB,EACVf,EAAUc,GASdgB,QAAQC,IAAIjB,GACZgB,QAAQC,IAAIhB,GACZ,IAAK,IAAIiB,EAAI,EAAGA,EAAIjC,EAAU8B,OAAQG,IAAK,CACzC,IAAK,IAAIC,EAAI,EAAGA,EAAIlC,EAAU8B,OAAS7B,EAAU6B,OAAQI,IACvDjC,EAAUkC,KAAM,KAElBjC,EAASkC,OAAQpC,EAAUiC,IAAMG,OAAQnC,EAAUgC,IACnDhB,EAAakB,KAAMjC,EAAS,IAC5BgB,EAAUiB,KAAMjC,GAAU,IAAMA,EAAQA,EAAO,IAAK,GAAK,GAEzDC,EAAUc,EAAagB,GAAKf,EAAUe,GACtCd,EAAagB,KAAKhC,GAAY,IAAMA,EAAWA,EAAU,IAAK,GAAK,GAEnEiB,EAAOe,KAAOlB,EAAagB,GAAKf,EAAUe,KAAO,GAAI,EAAGhB,EAAagB,GAAKf,EAAUe,IACpF5B,EAAM8B,KAAKf,EAAOa,GAAGd,EAAac,IAKlC5B,EAAM8B,KAA0C,IAApCjB,EAAUA,EAAUY,OAAS,GAAW,EAAIzB,EAAMgC,OAG/DzB,EAAgBD,EAFLN,EAE8ByB,QAC/BxB,EAAUD,EAAMwB,UAAWS,KAAM,KAG/CxB,EAAY,IA8BN,sBAEU,wBAAQQ,KAAK,SAASK,QA3BnB,WAEdnB,EAAU,IACVE,EAAU,IACVJ,EAAS,IACC,GACVM,EAAgB,IAElBE,EAAW,IAmBE,2B,gBC1FFyB,MARf,WACE,OACE,mCACA,cAAC,EAAD,OCFJC,IAASC,OAAQ,cAAC,EAAD,IAASC,SAASC,eAAgB,U,gBCPnDC,EAAOC,QAAU,CACbC,MAAO,CAAC,6BAA8B,uBACtCC,UAAU,EACVC,MAAO,CACLC,OAAQ,IAEVC,SAAU,CACRD,OAAQ,IAEVE,QAAS,K,gBCTbP,EAAOC,QAAU,CACbM,QAAS,CACPC,YAAa,GACbC,aAAc,O","file":"static/js/main.b0b4e45a.chunk.js","sourcesContent":["import React, {useState} from 'react';\n\n\nfunction AddNumber () {\n  const [equal, setEqual] = useState ([]);\n  const[numOne,setNumOne]=useState()\n   const[numTwo,setNumTwo]=useState()\n   const[equalMathOne,setEqualMathOne]=useState('')\n   const[toClear,setToClear]=useState(1)\n\n   let inputNumOne =numOne\n   let inputNumTwo =numTwo\n   let numberOne \n   let numberTwo\n   let addNum;\n  let remainderNum = [];\n  let addExcess = [0];\n  let equalMath \n  let addNumTwo\nlet addExcessTwo=[0]\nlet endAdd=[]\n\n\n\n\n    const AddNumberTo = () => {\n\n      inputNumOne =(inputNumOne.split('')).reverse()\n      inputNumTwo =(inputNumTwo.split('')).reverse()\n   const   inputField=()=>{\n        numberOne=inputNumOne\n        numberTwo=inputNumTwo\n        return (numberOne , numberTwo)\n\n      }\n      const changeInput=()=>{\n        numberOne=inputNumTwo\n        numberTwo=inputNumOne\n        return (numberOne , numberTwo)\n\n      }\n  ((inputNumOne.length >= inputNumTwo.length)? inputField():changeInput())   \n\n\n\n    \n    console.log(inputNumOne)\n    console.log(inputNumTwo)\n    for (let i = 0; i < numberOne.length; i++) {\n      for (let j = 0; j < numberOne.length - numberTwo.length; j++) {\n        numberTwo.push ('0');\n      }\n      addNum = Number (numberOne[i]) + Number (numberTwo[i]);\n      remainderNum.push (addNum % 10);\n      addExcess.push (addNum >= 10 ? (addNum-(addNum%10))/10 : 0);\n  \n      addNumTwo=remainderNum[i] + addExcess[i]\n      addExcessTwo.push(addNumTwo>= 10 ? (addNumTwo-(addNumTwo%10))/10 : 0)\n\n      endAdd.push ((remainderNum[i] + addExcess[i] === 10)?0 :remainderNum[i] + addExcess[i]);\n      equal.push(endAdd[i]+addExcessTwo[i])\n   \n         }\n     \n       \n      equal.push (addExcess[addExcess.length - 1] === 1 ? 1 : equal.pop ());\n      equalMath=equal\n     \n     setEqualMathOne(equalMathOne+((equalMath.length)))\n               setEqual (equal.reverse ().join (''));\n        \n          \n setToClear (0)\n           \n\n    };\n\n    const refresh = ( )=>{\n     \n      setNumOne('')\n      setNumTwo('')\n      setEqual([])\n      equalMath=''\n      setEqualMathOne('')\n     \n    setToClear(1)\n  \n\n    }\n\n    \n  return (\n    <div className=\"p-50\" >\n      <form  >\n     <input type=\"text\"  value={numOne} onChange={(e)=>{setNumOne(e.target.value)}}/>\n     <h3>{numOne}</h3>\n     <input type=\"text\" value={numTwo} onChange={(e)=>{setNumTwo(e.target.value)}}/>\n    <h3>{numTwo}</h3> \n    <h1>  {`equal = ${equal}`}</h1>\n     {toClear ===0? <h1>{`scientific format = ${equal} * 10 `} <sup>{equalMathOne}</sup>   </h1>: <h1> scientific format = </h1>}\n  <div>\n  {toClear ===1? \n       <button className=\"bg-red-500 \" type=\"button\" onClick={AddNumberTo} >\n        Addition\n      </button>: <button type='button' onClick={refresh}>Clear</button> }\n    \n    </div>  \n     \n      </form>\n    \n    </div>\n  );\n}\nexport default AddNumber;\n","import AddNumber from './calculator/AddNumber'\nimport \"tailwindcss/tailwind.css\"\nimport './tailwind.config'\nimport './postcss.config'\n\n\nfunction App() {\n  return (\n    <>\n    <AddNumber/>\n    </>\n  )\n}\n\nexport default App\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './postcss.config'\nimport './tailwind.config'\n\nReactDOM.render (<App />, document.getElementById ('root'));\n","module.exports = {\n    purge: ['./src/**/*.{js,jsx,ts,tsx}', './public/index.html'],\n    darkMode: false, // or 'media' or 'class'\n    theme: {\n      extend: {},\n    },\n    variants: {\n      extend: {},\n    },\n    plugins: [],\n  }","module.exports = {\n    plugins: {\n      tailwindcss: {},\n      autoprefixer: {},\n    }\n  }"],"sourceRoot":""}